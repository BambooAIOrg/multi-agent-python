name: Deploy to Aliyun SAE

on:
  push:
    branches: [ master, main ]  # 当推送到master或main分支时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Aliyun Container Registry
      uses: docker/login-action@v3
      with:
        registry: crpi-h63lvr41mcj56ogo.ap-southeast-1.personal.cr.aliyuncs.com
        username: aliyun8628604033
        password: ${{ secrets.ALIYUN_CR_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: crpi-h63lvr41mcj56ogo.ap-southeast-1.personal.cr.aliyuncs.com/bambooai/vocab-agent:${{ github.sha }},crpi-h63lvr41mcj56ogo.ap-southeast-1.personal.cr.aliyuncs.com/bambooai/vocab-agent:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Install Aliyun CLI
      run: |
        curl -o aliyun-cli-linux-latest-amd64.tgz https://aliyuncli.alicdn.com/aliyun-cli-linux-latest-amd64.tgz
        tar -xvzf aliyun-cli-linux-latest-amd64.tgz
        sudo mv aliyun /usr/local/bin/
        
    - name: Configure Aliyun CLI
      run: |
        aliyun configure set --profile default --mode AK --region ap-southeast-1 --access-key-id ${{ secrets.ALIYUN_ACCESS_KEY_ID }} --access-key-secret ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
    
    - name: Deploy to SAE
      run: |
        # 获取应用ID
        APP_ID=${{ secrets.ALIYUN_SAE_APP_ID }}
        
        # 设置认证信息和区域
        REGION="ap-southeast-1"
        ENDPOINT="sae.${REGION}.aliyuncs.com"
        
        # 创建容器镜像仓库访问凭证的Secret
        echo "Creating secret for container registry..."
        SECRET_NAME="aliyun-container-registry-auth"
        
        # 准备Docker配置JSON
        AUTH_STRING=$(echo -n "aliyun8628604033:${{ secrets.ALIYUN_CR_PASSWORD }}" | base64 -w 0)
        DOCKER_CONFIG="{\"auths\":{\"crpi-h63lvr41mcj56ogo.ap-southeast-1.personal.cr.aliyuncs.com\":{\"username\":\"aliyun8628604033\",\"password\":\"${{ secrets.ALIYUN_CR_PASSWORD }}\",\"auth\":\"$AUTH_STRING\"}}}"
        DOCKER_CONFIG_BASE64=$(echo -n "$DOCKER_CONFIG" | base64 -w 0)
        
        # 创建正确格式的SecretData
        SECRET_DATA="{\"SecretData\":\"{\\\".dockerconfigjson\\\":\\\"$DOCKER_CONFIG_BASE64\\\"}\"}"
        
        NAMESPACE_ID="${{ secrets.ALIYUN_SAE_NAMESPACE_ID }}"
        # 检查Secret是否存在
        SECRET_EXISTS=$(aliyun sae GET /pop/v1/sam/secret/secrets --NamespaceId "$NAMESPACE_ID" --region $REGION | grep -c "$SECRET_NAME" || true)
        
        echo "SECRET_EXISTS: ${SECRET_EXISTS}"
        if [ "$SECRET_EXISTS" -gt "0" ]; then
          echo "Getting numeric SecretId for the secret..."
          # 获取secret的详细信息，包括其数字ID
          SECRET_DETAILS=$(aliyun sae GET /pop/v1/sam/secret/secrets --NamespaceId "$NAMESPACE_ID" --region $REGION)
          
          # 完善提取SecretId的方法，使用jq工具
          # 先安装jq工具
          sudo apt-get update && sudo apt-get install -y jq
          
          # 使用jq精确提取与SECRET_NAME匹配的密钥的SecretId
          NUMERIC_SECRET_ID=$(echo "$SECRET_DETAILS" | jq -r --arg name "$SECRET_NAME" '.Data.Secrets[] | select(.SecretName==$name) | .SecretId')
          
          echo "Found SecretId: ${NUMERIC_SECRET_ID}"
          
          if [ -z "$NUMERIC_SECRET_ID" ]; then
            echo "ERROR: Could not find SecretId for $SECRET_NAME. Creating new secret instead."
            aliyun sae POST /pop/v1/sam/secret/secret \
              --region $REGION \
              --NamespaceId "$NAMESPACE_ID" \
              --SecretName "$SECRET_NAME" \
              --SecretType "kubernetes.io/dockerconfigjson" \
              --SecretData "$SECRET_DATA" \
              --header "Content-Type=application/json;"
          else
            echo "Updating existing secret with ID: ${NUMERIC_SECRET_ID}..."
            aliyun sae PUT /pop/v1/sam/secret/secret \
              --region $REGION \
              --SecretId "$NUMERIC_SECRET_ID" \
              --NamespaceId "$NAMESPACE_ID" \
              --SecretData "$SECRET_DATA" \
              --header "Content-Type=application/json;"
          fi
        else
          echo "Creating new secret..."
          aliyun sae POST /pop/v1/sam/secret/secret \
            --region $REGION \
            --NamespaceId "$NAMESPACE_ID" \
            --SecretName "$SECRET_NAME" \
            --SecretType "kubernetes.io/dockerconfigjson" \
            --SecretData "$SECRET_DATA" \
            --header "Content-Type=application/json;"
        fi
        
        # 更新SAE应用配置
        echo "Deploying SAE application..."
        aliyun sae POST /pop/v1/sam/app/deployApplication \
          --region $REGION \
          --AppId "$APP_ID" \
          --PackageType "Image" \
          --PackageVersion "${{ github.sha }}" \
          --ImageUrl "crpi-h63lvr41mcj56ogo.ap-southeast-1.personal.cr.aliyuncs.com/bambooai/vocab-agent:${{ github.sha }}" \
          --ImagePullSecret "$SECRET_NAME" \
          --Envs "[{\"name\":\"LIVEKIT_URL\",\"value\":\"${{ secrets.LIVEKIT_URL }}\"},
                 {\"name\":\"LIVEKIT_API_KEY\",\"value\":\"${{ secrets.LIVEKIT_API_KEY }}\"},
                 {\"name\":\"LIVEKIT_API_SECRET\",\"value\":\"${{ secrets.LIVEKIT_API_SECRET }}\"},
                 {\"name\":\"OPENAI_API_KEY\",\"value\":\"${{ secrets.OPENAI_API_KEY }}\"},
                 {\"name\":\"ALIYUN_APPKEY\",\"value\":\"${{ secrets.ALIYUN_APPKEY }}\"},
                 {\"name\":\"ALIYUN_ACCESS_KEY_ID\",\"value\":\"${{ secrets.ALIYUN_ACCESS_KEY_ID }}\"},
                 {\"name\":\"ALIYUN_ACCESS_KEY_SECRET\",\"value\":\"${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}\"},
                 {\"name\":\"MINIMAX_GROUP_ID\",\"value\":\"${{ secrets.MINIMAX_GROUP_ID }}\"},
                 {\"name\":\"MINIMAX_API_KEY\",\"value\":\"${{ secrets.MINIMAX_API_KEY }}\"},
                 {\"name\":\"ENV\",\"value\":\"production\"}]" \
          --header "Content-Type=application/json;"